// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.1
// source: log.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Workmode int32

const (
	Workmode_WORKMODE_UNKNOWN       Workmode = 0
	Workmode_WORKMODE_SEARCH_POUNCE Workmode = 1
	Workmode_WORKMODE_RUN           Workmode = 2
)

// Enum value maps for Workmode.
var (
	Workmode_name = map[int32]string{
		0: "WORKMODE_UNKNOWN",
		1: "WORKMODE_SEARCH_POUNCE",
		2: "WORKMODE_RUN",
	}
	Workmode_value = map[string]int32{
		"WORKMODE_UNKNOWN":       0,
		"WORKMODE_SEARCH_POUNCE": 1,
		"WORKMODE_RUN":           2,
	}
)

func (x Workmode) Enum() *Workmode {
	p := new(Workmode)
	*p = x
	return p
}

func (x Workmode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Workmode) Descriptor() protoreflect.EnumDescriptor {
	return file_log_proto_enumTypes[0].Descriptor()
}

func (Workmode) Type() protoreflect.EnumType {
	return &file_log_proto_enumTypes[0]
}

func (x Workmode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Workmode.Descriptor instead.
func (Workmode) EnumDescriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{0}
}

type FileInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FormatVersion int32                  `protobuf:"varint,1,opt,name=format_version,json=formatVersion,proto3" json:"format_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	mi := &file_log_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{0}
}

func (x *FileInfo) GetFormatVersion() int32 {
	if x != nil {
		return x.FormatVersion
	}
	return 0
}

type Entry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Entry:
	//
	//	*Entry_Qso
	//	*Entry_Station
	//	*Entry_Contest
	//	*Entry_Keyer
	Entry         isEntry_Entry `protobuf_oneof:"entry"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Entry) Reset() {
	*x = Entry{}
	mi := &file_log_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entry) ProtoMessage() {}

func (x *Entry) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entry.ProtoReflect.Descriptor instead.
func (*Entry) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{1}
}

func (x *Entry) GetEntry() isEntry_Entry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *Entry) GetQso() *QSO {
	if x != nil {
		if x, ok := x.Entry.(*Entry_Qso); ok {
			return x.Qso
		}
	}
	return nil
}

func (x *Entry) GetStation() *Station {
	if x != nil {
		if x, ok := x.Entry.(*Entry_Station); ok {
			return x.Station
		}
	}
	return nil
}

func (x *Entry) GetContest() *Contest {
	if x != nil {
		if x, ok := x.Entry.(*Entry_Contest); ok {
			return x.Contest
		}
	}
	return nil
}

func (x *Entry) GetKeyer() *Keyer {
	if x != nil {
		if x, ok := x.Entry.(*Entry_Keyer); ok {
			return x.Keyer
		}
	}
	return nil
}

type isEntry_Entry interface {
	isEntry_Entry()
}

type Entry_Qso struct {
	Qso *QSO `protobuf:"bytes,1,opt,name=qso,proto3,oneof"`
}

type Entry_Station struct {
	Station *Station `protobuf:"bytes,2,opt,name=station,proto3,oneof"`
}

type Entry_Contest struct {
	Contest *Contest `protobuf:"bytes,3,opt,name=contest,proto3,oneof"`
}

type Entry_Keyer struct {
	Keyer *Keyer `protobuf:"bytes,4,opt,name=keyer,proto3,oneof"`
}

func (*Entry_Qso) isEntry_Entry() {}

func (*Entry_Station) isEntry_Entry() {}

func (*Entry_Contest) isEntry_Entry() {}

func (*Entry_Keyer) isEntry_Entry() {}

type QSO struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Callsign      string                 `protobuf:"bytes,1,opt,name=callsign,proto3" json:"callsign,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Band          string                 `protobuf:"bytes,3,opt,name=band,proto3" json:"band,omitempty"`
	Mode          string                 `protobuf:"bytes,4,opt,name=mode,proto3" json:"mode,omitempty"`
	MyReport      string                 `protobuf:"bytes,5,opt,name=my_report,json=myReport,proto3" json:"my_report,omitempty"`
	MyNumber      int32                  `protobuf:"varint,6,opt,name=my_number,json=myNumber,proto3" json:"my_number,omitempty"`
	TheirReport   string                 `protobuf:"bytes,7,opt,name=their_report,json=theirReport,proto3" json:"their_report,omitempty"`
	TheirNumber   int32                  `protobuf:"varint,8,opt,name=their_number,json=theirNumber,proto3" json:"their_number,omitempty"`
	LogTimestamp  int64                  `protobuf:"varint,9,opt,name=log_timestamp,json=logTimestamp,proto3" json:"log_timestamp,omitempty"`
	MyXchange     string                 `protobuf:"bytes,10,opt,name=my_xchange,json=myXchange,proto3" json:"my_xchange,omitempty"`          // deprecated
	TheirXchange  string                 `protobuf:"bytes,11,opt,name=their_xchange,json=theirXchange,proto3" json:"their_xchange,omitempty"` // deprecated
	Frequency     float64                `protobuf:"fixed64,12,opt,name=frequency,proto3" json:"frequency,omitempty"`
	MyExchange    []string               `protobuf:"bytes,14,rep,name=my_exchange,json=myExchange,proto3" json:"my_exchange,omitempty"`
	TheirExchange []string               `protobuf:"bytes,15,rep,name=their_exchange,json=theirExchange,proto3" json:"their_exchange,omitempty"`
	Workmode      Workmode               `protobuf:"varint,16,opt,name=workmode,proto3,enum=pb.Workmode" json:"workmode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QSO) Reset() {
	*x = QSO{}
	mi := &file_log_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QSO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QSO) ProtoMessage() {}

func (x *QSO) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QSO.ProtoReflect.Descriptor instead.
func (*QSO) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{2}
}

func (x *QSO) GetCallsign() string {
	if x != nil {
		return x.Callsign
	}
	return ""
}

func (x *QSO) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *QSO) GetBand() string {
	if x != nil {
		return x.Band
	}
	return ""
}

func (x *QSO) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *QSO) GetMyReport() string {
	if x != nil {
		return x.MyReport
	}
	return ""
}

func (x *QSO) GetMyNumber() int32 {
	if x != nil {
		return x.MyNumber
	}
	return 0
}

func (x *QSO) GetTheirReport() string {
	if x != nil {
		return x.TheirReport
	}
	return ""
}

func (x *QSO) GetTheirNumber() int32 {
	if x != nil {
		return x.TheirNumber
	}
	return 0
}

func (x *QSO) GetLogTimestamp() int64 {
	if x != nil {
		return x.LogTimestamp
	}
	return 0
}

func (x *QSO) GetMyXchange() string {
	if x != nil {
		return x.MyXchange
	}
	return ""
}

func (x *QSO) GetTheirXchange() string {
	if x != nil {
		return x.TheirXchange
	}
	return ""
}

func (x *QSO) GetFrequency() float64 {
	if x != nil {
		return x.Frequency
	}
	return 0
}

func (x *QSO) GetMyExchange() []string {
	if x != nil {
		return x.MyExchange
	}
	return nil
}

func (x *QSO) GetTheirExchange() []string {
	if x != nil {
		return x.TheirExchange
	}
	return nil
}

func (x *QSO) GetWorkmode() Workmode {
	if x != nil {
		return x.Workmode
	}
	return Workmode_WORKMODE_UNKNOWN
}

type Station struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Callsign      string                 `protobuf:"bytes,1,opt,name=callsign,proto3" json:"callsign,omitempty"`
	Operator      string                 `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	Locator       string                 `protobuf:"bytes,3,opt,name=locator,proto3" json:"locator,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Station) Reset() {
	*x = Station{}
	mi := &file_log_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Station) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Station) ProtoMessage() {}

func (x *Station) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Station.ProtoReflect.Descriptor instead.
func (*Station) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{3}
}

func (x *Station) GetCallsign() string {
	if x != nil {
		return x.Callsign
	}
	return ""
}

func (x *Station) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *Station) GetLocator() string {
	if x != nil {
		return x.Locator
	}
	return ""
}

type Contest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Name                    string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	EnterTheirNumber        bool                   `protobuf:"varint,2,opt,name=enter_their_number,json=enterTheirNumber,proto3" json:"enter_their_number,omitempty"`                      // deprecated
	EnterTheirXchange       bool                   `protobuf:"varint,3,opt,name=enter_their_xchange,json=enterTheirXchange,proto3" json:"enter_their_xchange,omitempty"`                   // deprecated
	RequireTheirXchange     bool                   `protobuf:"varint,4,opt,name=require_their_xchange,json=requireTheirXchange,proto3" json:"require_their_xchange,omitempty"`             // deprecated
	AllowMultiBand          bool                   `protobuf:"varint,5,opt,name=allow_multi_band,json=allowMultiBand,proto3" json:"allow_multi_band,omitempty"`                            // deprecated
	AllowMultiMode          bool                   `protobuf:"varint,6,opt,name=allow_multi_mode,json=allowMultiMode,proto3" json:"allow_multi_mode,omitempty"`                            // deprecated
	SameCountryPoints       int32                  `protobuf:"varint,7,opt,name=same_country_points,json=sameCountryPoints,proto3" json:"same_country_points,omitempty"`                   // deprecated
	SameContinentPoints     int32                  `protobuf:"varint,8,opt,name=same_continent_points,json=sameContinentPoints,proto3" json:"same_continent_points,omitempty"`             // deprecated
	SpecificCountryPoints   int32                  `protobuf:"varint,9,opt,name=specific_country_points,json=specificCountryPoints,proto3" json:"specific_country_points,omitempty"`       // deprecated
	SpecificCountryPrefixes []string               `protobuf:"bytes,10,rep,name=specific_country_prefixes,json=specificCountryPrefixes,proto3" json:"specific_country_prefixes,omitempty"` // deprecated
	OtherPoints             int32                  `protobuf:"varint,11,opt,name=other_points,json=otherPoints,proto3" json:"other_points,omitempty"`                                      // deprecated
	Multis                  *Multis                `protobuf:"bytes,12,opt,name=multis,proto3" json:"multis,omitempty"`                                                                    // deprecated
	XchangeMultiPattern     string                 `protobuf:"bytes,13,opt,name=xchange_multi_pattern,json=xchangeMultiPattern,proto3" json:"xchange_multi_pattern,omitempty"`             // deprecated
	CountPerBand            bool                   `protobuf:"varint,14,opt,name=count_per_band,json=countPerBand,proto3" json:"count_per_band,omitempty"`                                 // deprecated
	CabrilloQsoTemplate     string                 `protobuf:"bytes,15,opt,name=cabrillo_qso_template,json=cabrilloQsoTemplate,proto3" json:"cabrillo_qso_template,omitempty"`             // deprecated
	CallHistoryFilename     string                 `protobuf:"bytes,16,opt,name=call_history_filename,json=callHistoryFilename,proto3" json:"call_history_filename,omitempty"`
	DefinitionYaml          string                 `protobuf:"bytes,18,opt,name=definition_yaml,json=definitionYaml,proto3" json:"definition_yaml,omitempty"`
	ExchangeValues          []string               `protobuf:"bytes,19,rep,name=exchange_values,json=exchangeValues,proto3" json:"exchange_values,omitempty"`
	GenerateSerialExchange  bool                   `protobuf:"varint,20,opt,name=generate_serial_exchange,json=generateSerialExchange,proto3" json:"generate_serial_exchange,omitempty"`
	CallHistoryFieldNames   []string               `protobuf:"bytes,21,rep,name=call_history_field_names,json=callHistoryFieldNames,proto3" json:"call_history_field_names,omitempty"`
	QsosGoal                int32                  `protobuf:"varint,22,opt,name=qsos_goal,json=qsosGoal,proto3" json:"qsos_goal,omitempty"`
	PointsGoal              int32                  `protobuf:"varint,23,opt,name=points_goal,json=pointsGoal,proto3" json:"points_goal,omitempty"`
	MultisGoal              int32                  `protobuf:"varint,24,opt,name=multis_goal,json=multisGoal,proto3" json:"multis_goal,omitempty"`
	SprintOperation         bool                   `protobuf:"varint,25,opt,name=sprint_operation,json=sprintOperation,proto3" json:"sprint_operation,omitempty"`
	StartTime               *timestamppb.Timestamp `protobuf:"bytes,26,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	GenerateReport          bool                   `protobuf:"varint,27,opt,name=generate_report,json=generateReport,proto3" json:"generate_report,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Contest) Reset() {
	*x = Contest{}
	mi := &file_log_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Contest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contest) ProtoMessage() {}

func (x *Contest) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contest.ProtoReflect.Descriptor instead.
func (*Contest) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{4}
}

func (x *Contest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Contest) GetEnterTheirNumber() bool {
	if x != nil {
		return x.EnterTheirNumber
	}
	return false
}

func (x *Contest) GetEnterTheirXchange() bool {
	if x != nil {
		return x.EnterTheirXchange
	}
	return false
}

func (x *Contest) GetRequireTheirXchange() bool {
	if x != nil {
		return x.RequireTheirXchange
	}
	return false
}

func (x *Contest) GetAllowMultiBand() bool {
	if x != nil {
		return x.AllowMultiBand
	}
	return false
}

func (x *Contest) GetAllowMultiMode() bool {
	if x != nil {
		return x.AllowMultiMode
	}
	return false
}

func (x *Contest) GetSameCountryPoints() int32 {
	if x != nil {
		return x.SameCountryPoints
	}
	return 0
}

func (x *Contest) GetSameContinentPoints() int32 {
	if x != nil {
		return x.SameContinentPoints
	}
	return 0
}

func (x *Contest) GetSpecificCountryPoints() int32 {
	if x != nil {
		return x.SpecificCountryPoints
	}
	return 0
}

func (x *Contest) GetSpecificCountryPrefixes() []string {
	if x != nil {
		return x.SpecificCountryPrefixes
	}
	return nil
}

func (x *Contest) GetOtherPoints() int32 {
	if x != nil {
		return x.OtherPoints
	}
	return 0
}

func (x *Contest) GetMultis() *Multis {
	if x != nil {
		return x.Multis
	}
	return nil
}

func (x *Contest) GetXchangeMultiPattern() string {
	if x != nil {
		return x.XchangeMultiPattern
	}
	return ""
}

func (x *Contest) GetCountPerBand() bool {
	if x != nil {
		return x.CountPerBand
	}
	return false
}

func (x *Contest) GetCabrilloQsoTemplate() string {
	if x != nil {
		return x.CabrilloQsoTemplate
	}
	return ""
}

func (x *Contest) GetCallHistoryFilename() string {
	if x != nil {
		return x.CallHistoryFilename
	}
	return ""
}

func (x *Contest) GetDefinitionYaml() string {
	if x != nil {
		return x.DefinitionYaml
	}
	return ""
}

func (x *Contest) GetExchangeValues() []string {
	if x != nil {
		return x.ExchangeValues
	}
	return nil
}

func (x *Contest) GetGenerateSerialExchange() bool {
	if x != nil {
		return x.GenerateSerialExchange
	}
	return false
}

func (x *Contest) GetCallHistoryFieldNames() []string {
	if x != nil {
		return x.CallHistoryFieldNames
	}
	return nil
}

func (x *Contest) GetQsosGoal() int32 {
	if x != nil {
		return x.QsosGoal
	}
	return 0
}

func (x *Contest) GetPointsGoal() int32 {
	if x != nil {
		return x.PointsGoal
	}
	return 0
}

func (x *Contest) GetMultisGoal() int32 {
	if x != nil {
		return x.MultisGoal
	}
	return 0
}

func (x *Contest) GetSprintOperation() bool {
	if x != nil {
		return x.SprintOperation
	}
	return false
}

func (x *Contest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Contest) GetGenerateReport() bool {
	if x != nil {
		return x.GenerateReport
	}
	return false
}

type Multis struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dxcc          bool                   `protobuf:"varint,1,opt,name=dxcc,proto3" json:"dxcc,omitempty"`       // deprecated
	Wpx           bool                   `protobuf:"varint,2,opt,name=wpx,proto3" json:"wpx,omitempty"`         // deprecated
	Xchange       bool                   `protobuf:"varint,3,opt,name=xchange,proto3" json:"xchange,omitempty"` // deprecated
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Multis) Reset() {
	*x = Multis{}
	mi := &file_log_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Multis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Multis) ProtoMessage() {}

func (x *Multis) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Multis.ProtoReflect.Descriptor instead.
func (*Multis) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{5}
}

func (x *Multis) GetDxcc() bool {
	if x != nil {
		return x.Dxcc
	}
	return false
}

func (x *Multis) GetWpx() bool {
	if x != nil {
		return x.Wpx
	}
	return false
}

func (x *Multis) GetXchange() bool {
	if x != nil {
		return x.Xchange
	}
	return false
}

type Keyer struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Wpm                   int32                  `protobuf:"varint,1,opt,name=wpm,proto3" json:"wpm,omitempty"`
	SpMacros              []string               `protobuf:"bytes,2,rep,name=sp_macros,json=spMacros,proto3" json:"sp_macros,omitempty"`
	RunMacros             []string               `protobuf:"bytes,3,rep,name=run_macros,json=runMacros,proto3" json:"run_macros,omitempty"`
	SpLabels              []string               `protobuf:"bytes,4,rep,name=sp_labels,json=spLabels,proto3" json:"sp_labels,omitempty"`
	RunLabels             []string               `protobuf:"bytes,5,rep,name=run_labels,json=runLabels,proto3" json:"run_labels,omitempty"`
	ParrotIntervalSeconds int32                  `protobuf:"varint,6,opt,name=parrot_interval_seconds,json=parrotIntervalSeconds,proto3" json:"parrot_interval_seconds,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Keyer) Reset() {
	*x = Keyer{}
	mi := &file_log_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Keyer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Keyer) ProtoMessage() {}

func (x *Keyer) ProtoReflect() protoreflect.Message {
	mi := &file_log_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Keyer.ProtoReflect.Descriptor instead.
func (*Keyer) Descriptor() ([]byte, []int) {
	return file_log_proto_rawDescGZIP(), []int{6}
}

func (x *Keyer) GetWpm() int32 {
	if x != nil {
		return x.Wpm
	}
	return 0
}

func (x *Keyer) GetSpMacros() []string {
	if x != nil {
		return x.SpMacros
	}
	return nil
}

func (x *Keyer) GetRunMacros() []string {
	if x != nil {
		return x.RunMacros
	}
	return nil
}

func (x *Keyer) GetSpLabels() []string {
	if x != nil {
		return x.SpLabels
	}
	return nil
}

func (x *Keyer) GetRunLabels() []string {
	if x != nil {
		return x.RunLabels
	}
	return nil
}

func (x *Keyer) GetParrotIntervalSeconds() int32 {
	if x != nil {
		return x.ParrotIntervalSeconds
	}
	return 0
}

var File_log_proto protoreflect.FileDescriptor

const file_log_proto_rawDesc = "" +
	"\n" +
	"\tlog.proto\x12\x02pb\x1a\x1fgoogle/protobuf/timestamp.proto\"1\n" +
	"\bFileInfo\x12%\n" +
	"\x0eformat_version\x18\x01 \x01(\x05R\rformatVersion\"\xa2\x01\n" +
	"\x05Entry\x12\x1b\n" +
	"\x03qso\x18\x01 \x01(\v2\a.pb.QSOH\x00R\x03qso\x12'\n" +
	"\astation\x18\x02 \x01(\v2\v.pb.StationH\x00R\astation\x12'\n" +
	"\acontest\x18\x03 \x01(\v2\v.pb.ContestH\x00R\acontest\x12!\n" +
	"\x05keyer\x18\x04 \x01(\v2\t.pb.KeyerH\x00R\x05keyerB\a\n" +
	"\x05entry\"\xe6\x03\n" +
	"\x03QSO\x12\x1a\n" +
	"\bcallsign\x18\x01 \x01(\tR\bcallsign\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x12\x12\n" +
	"\x04band\x18\x03 \x01(\tR\x04band\x12\x12\n" +
	"\x04mode\x18\x04 \x01(\tR\x04mode\x12\x1b\n" +
	"\tmy_report\x18\x05 \x01(\tR\bmyReport\x12\x1b\n" +
	"\tmy_number\x18\x06 \x01(\x05R\bmyNumber\x12!\n" +
	"\ftheir_report\x18\a \x01(\tR\vtheirReport\x12!\n" +
	"\ftheir_number\x18\b \x01(\x05R\vtheirNumber\x12#\n" +
	"\rlog_timestamp\x18\t \x01(\x03R\flogTimestamp\x12\x1d\n" +
	"\n" +
	"my_xchange\x18\n" +
	" \x01(\tR\tmyXchange\x12#\n" +
	"\rtheir_xchange\x18\v \x01(\tR\ftheirXchange\x12\x1c\n" +
	"\tfrequency\x18\f \x01(\x01R\tfrequency\x12\x1f\n" +
	"\vmy_exchange\x18\x0e \x03(\tR\n" +
	"myExchange\x12%\n" +
	"\x0etheir_exchange\x18\x0f \x03(\tR\rtheirExchange\x12(\n" +
	"\bworkmode\x18\x10 \x01(\x0e2\f.pb.WorkmodeR\bworkmodeJ\x04\b\r\x10\x0e\"[\n" +
	"\aStation\x12\x1a\n" +
	"\bcallsign\x18\x01 \x01(\tR\bcallsign\x12\x1a\n" +
	"\boperator\x18\x02 \x01(\tR\boperator\x12\x18\n" +
	"\alocator\x18\x03 \x01(\tR\alocator\"\x9d\t\n" +
	"\aContest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12,\n" +
	"\x12enter_their_number\x18\x02 \x01(\bR\x10enterTheirNumber\x12.\n" +
	"\x13enter_their_xchange\x18\x03 \x01(\bR\x11enterTheirXchange\x122\n" +
	"\x15require_their_xchange\x18\x04 \x01(\bR\x13requireTheirXchange\x12(\n" +
	"\x10allow_multi_band\x18\x05 \x01(\bR\x0eallowMultiBand\x12(\n" +
	"\x10allow_multi_mode\x18\x06 \x01(\bR\x0eallowMultiMode\x12.\n" +
	"\x13same_country_points\x18\a \x01(\x05R\x11sameCountryPoints\x122\n" +
	"\x15same_continent_points\x18\b \x01(\x05R\x13sameContinentPoints\x126\n" +
	"\x17specific_country_points\x18\t \x01(\x05R\x15specificCountryPoints\x12:\n" +
	"\x19specific_country_prefixes\x18\n" +
	" \x03(\tR\x17specificCountryPrefixes\x12!\n" +
	"\fother_points\x18\v \x01(\x05R\votherPoints\x12\"\n" +
	"\x06multis\x18\f \x01(\v2\n" +
	".pb.MultisR\x06multis\x122\n" +
	"\x15xchange_multi_pattern\x18\r \x01(\tR\x13xchangeMultiPattern\x12$\n" +
	"\x0ecount_per_band\x18\x0e \x01(\bR\fcountPerBand\x122\n" +
	"\x15cabrillo_qso_template\x18\x0f \x01(\tR\x13cabrilloQsoTemplate\x122\n" +
	"\x15call_history_filename\x18\x10 \x01(\tR\x13callHistoryFilename\x12'\n" +
	"\x0fdefinition_yaml\x18\x12 \x01(\tR\x0edefinitionYaml\x12'\n" +
	"\x0fexchange_values\x18\x13 \x03(\tR\x0eexchangeValues\x128\n" +
	"\x18generate_serial_exchange\x18\x14 \x01(\bR\x16generateSerialExchange\x127\n" +
	"\x18call_history_field_names\x18\x15 \x03(\tR\x15callHistoryFieldNames\x12\x1b\n" +
	"\tqsos_goal\x18\x16 \x01(\x05R\bqsosGoal\x12\x1f\n" +
	"\vpoints_goal\x18\x17 \x01(\x05R\n" +
	"pointsGoal\x12\x1f\n" +
	"\vmultis_goal\x18\x18 \x01(\x05R\n" +
	"multisGoal\x12)\n" +
	"\x10sprint_operation\x18\x19 \x01(\bR\x0fsprintOperation\x129\n" +
	"\n" +
	"start_time\x18\x1a \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x12'\n" +
	"\x0fgenerate_report\x18\x1b \x01(\bR\x0egenerateReportJ\x04\b\x11\x10\x12\"H\n" +
	"\x06Multis\x12\x12\n" +
	"\x04dxcc\x18\x01 \x01(\bR\x04dxcc\x12\x10\n" +
	"\x03wpx\x18\x02 \x01(\bR\x03wpx\x12\x18\n" +
	"\axchange\x18\x03 \x01(\bR\axchange\"\xc9\x01\n" +
	"\x05Keyer\x12\x10\n" +
	"\x03wpm\x18\x01 \x01(\x05R\x03wpm\x12\x1b\n" +
	"\tsp_macros\x18\x02 \x03(\tR\bspMacros\x12\x1d\n" +
	"\n" +
	"run_macros\x18\x03 \x03(\tR\trunMacros\x12\x1b\n" +
	"\tsp_labels\x18\x04 \x03(\tR\bspLabels\x12\x1d\n" +
	"\n" +
	"run_labels\x18\x05 \x03(\tR\trunLabels\x126\n" +
	"\x17parrot_interval_seconds\x18\x06 \x01(\x05R\x15parrotIntervalSeconds*N\n" +
	"\bWorkmode\x12\x14\n" +
	"\x10WORKMODE_UNKNOWN\x10\x00\x12\x1a\n" +
	"\x16WORKMODE_SEARCH_POUNCE\x10\x01\x12\x10\n" +
	"\fWORKMODE_RUN\x10\x02B\tZ\acore/pbb\x06proto3"

var (
	file_log_proto_rawDescOnce sync.Once
	file_log_proto_rawDescData []byte
)

func file_log_proto_rawDescGZIP() []byte {
	file_log_proto_rawDescOnce.Do(func() {
		file_log_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_log_proto_rawDesc), len(file_log_proto_rawDesc)))
	})
	return file_log_proto_rawDescData
}

var file_log_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_log_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_log_proto_goTypes = []any{
	(Workmode)(0),                 // 0: pb.Workmode
	(*FileInfo)(nil),              // 1: pb.FileInfo
	(*Entry)(nil),                 // 2: pb.Entry
	(*QSO)(nil),                   // 3: pb.QSO
	(*Station)(nil),               // 4: pb.Station
	(*Contest)(nil),               // 5: pb.Contest
	(*Multis)(nil),                // 6: pb.Multis
	(*Keyer)(nil),                 // 7: pb.Keyer
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
}
var file_log_proto_depIdxs = []int32{
	3, // 0: pb.Entry.qso:type_name -> pb.QSO
	4, // 1: pb.Entry.station:type_name -> pb.Station
	5, // 2: pb.Entry.contest:type_name -> pb.Contest
	7, // 3: pb.Entry.keyer:type_name -> pb.Keyer
	0, // 4: pb.QSO.workmode:type_name -> pb.Workmode
	6, // 5: pb.Contest.multis:type_name -> pb.Multis
	8, // 6: pb.Contest.start_time:type_name -> google.protobuf.Timestamp
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_log_proto_init() }
func file_log_proto_init() {
	if File_log_proto != nil {
		return
	}
	file_log_proto_msgTypes[1].OneofWrappers = []any{
		(*Entry_Qso)(nil),
		(*Entry_Station)(nil),
		(*Entry_Contest)(nil),
		(*Entry_Keyer)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_log_proto_rawDesc), len(file_log_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_log_proto_goTypes,
		DependencyIndexes: file_log_proto_depIdxs,
		EnumInfos:         file_log_proto_enumTypes,
		MessageInfos:      file_log_proto_msgTypes,
	}.Build()
	File_log_proto = out.File
	file_log_proto_goTypes = nil
	file_log_proto_depIdxs = nil
}
